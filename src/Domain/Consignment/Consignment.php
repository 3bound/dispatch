<?php

namespace Dispatch\Domain\Consignment;

/**
 * A shipping consignment
 *
 */
class Consignment
{

    /**
     * The unique ID of this consignment
     *
     * Generated by the courier's algorithm
     *
     * @var string
     *
     */
    private $consignmentId;

    /**
     * The courier assigned to this consignment
     *
     * @var \Dispatch\Domain\Couriers\CourierInterface
     *
     */
    private $courier;

    /**
     * The name of the courier
     *
     * @var string
     *
     */
    private $courierName;


    /**
     * @param \Dispatch\Domain\Couriers\CourierInterface
     *
     */
    public function __construct(\Dispatch\Domain\Couriers\CourierInterface $courier)
    {
        $this->courier = $courier;
        $this->setConsignmentId($this->courier->generateConsignmentId());
        $this->setCourierName($this->courier->getName());
    }


    /**
     * Set the consignment ID
     *
     * @param string $id
     * @return Consignment
     *
     * @throws InvalidArgumentException
     *
     */
    private function setConsignmentId(string $id): Consignment
    {
        if (empty($id)) {
            throw new \InvalidArgumentException("Empty consignment ID generated by " . get_class($this->courier));
        }

        $this->consignmentId = $id;

        return $this;
    }


    /**
     * Set the courier name
     *
     * @param string $name
     * @return Consignment
     *
     * @throws InvalidArgumentException
     *
     */
    private function setCourierName(string $name): Consignment
    {
        if (empty($name)) {
            throw new \InvalidArgumentException("Empty courier name supplied by " . get_class($this->courier));
        }

        $this->courierName = $name;

        return $this;
    }


    /**
     * Get the consignment ID
     *
     * @return string
     *
     */
    public function getConsignmentId(): string
    {
        return $this->consignmentId;
    }


    /**
     * Get the courier name
     *
     * @return string
     *
     */
    public function getCourierName(): string
    {
        return $this->courierName;
    }


    /**
     * Get the courier
     *
     * @return \Dispatch\Domain\Couriers\CourierInterface
     *
     */
    public function getCourier(): \Dispatch\Domain\Couriers\CourierInterface
    {
        return $this->courier;
    }
}
